Describe tests E and F

Test Plan E:
A special case that we noticed was when the free call was on the last location of the array. There are certain situations where the array had enough space to fit the malloc however not enough space to fit another meta datablock. Therefore, we had to give the remaining space to the malloc call. In order to test and make sure that we gave the space correctly and then freed it correctly, a test plan must be developed where we almost reach the limit of our array but make a request for just enough space for one more malloc, de allocate and then allocate again over and over again to make sure we dont lose any of the remaining bytes when we do this. 

Test plan F: This test plan will also test the limits of our free, we will be giving it pointers that are not actually values but rather random things like integers that are within our array, actual pointers but with a bit more of pointer arithmetic added up on it. What we are passing to the free will be pointers to ints that fit within the range but also pointers that are slightly off of the actual malloc pointers. These calls will be done over 100 times in order to add along the pointer and ensure that different locations in the array are tested. Furthermore, we will be testing the array when it is at capacity and has values in certain slots and also when it is rather empty so we dont really know what is inside of the datavalues of last array.
